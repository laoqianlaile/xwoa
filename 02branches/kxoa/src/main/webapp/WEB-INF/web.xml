<?xml version="1.0" encoding="UTF-8"?>

<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee
	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">

    <display-name>科协OA</display-name>

    <!-- param -->
    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>oa_kxoa</param-value>
    </context-param>

    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:log4j.properties</param-value>
    </context-param>

    <context-param>
        <param-name>log4jRefreshInterval</param-name>
        <param-value>60000</param-value>
    </context-param>

    <!-- /WEB-INF/action-servlet.xml,   -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
              classpath:spring-context.xml,
            classpath:spring-hibernate.xml,
            classpath*:/sysconfig/spring-*.xml,
            classpath*:/sampleflowconfig/spring-*.xml,
            classpath:appconfig/spring-*.xml,
            classpath:powerruntimeconfig/spring-*.xml, 
            classpath:powerbaseconfig/spring-*.xml,   
            classpath:statconfig/spring-*.xml,
            classpath:spring-security-dao.xml,
            classpath:dispatchdocconfig/spring-*.xml,
            classpath:oaconfig/spring-*.xml,
            classpath:bbsconfig/spring-*.xml,            
            classpath:quartz.xml,
            classpath:xfire-servlet.xml
        </param-value>
    </context-param>

    <context-param>
        <param-name>extremecomponentsPreferencesLocation</param-name>
        <param-value>/extremetable.properties</param-value>
    </context-param>

  
    <!-- spring 编码过滤器  解决中文乱码用-->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>
            org.springframework.web.filter.CharacterEncodingFilter
        </filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>*.html</url-pattern>
    </filter-mapping>

  <!-- CAS统一登出过滤器 -->
   
    <!-- <filter>
        <filter-name>CASSingleSignOutFilter</filter-name>
        <filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
    </filter>
   
    <filter-mapping>
        <filter-name>CASSingleSignOutFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping> -->
      
    <!-- spring Security 认证与权限管理-->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/j_spring_security_check</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/j_spring_security_logout</url-pattern>
    </filter-mapping> 
     
      <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/j_spring_cas_security_check</url-pattern>
    </filter-mapping>
   
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>
    <!-- 登录访问后处理过滤器，不要乱改变过滤器的位置 -->
     <filter>
        <filter-name>accessFilter</filter-name>
        <filter-class>
            com.centit.sys.filter.AccessFilter
        </filter-class>
    </filter>
    <filter-mapping>
        <filter-name>accessFilter</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping> 
    <filter>
        <filter-name>SOSIVPFilter</filter-name>
        <filter-class>
            org.springframework.orm.hibernate3.support.OpenSessionInViewFilter
        </filter-class>
        <init-param>
            <param-name>singleSession</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>flushMode</param-name>
            <param-value>AUTO</param-value>
        </init-param>

    </filter>

    <filter-mapping>
        <filter-name>SOSIVPFilter</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>SOSIVPFilter</filter-name>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>
    
  <!--   解决xss漏洞   (新) beg-->
	<filter>
		<filter-name>XSSFiler</filter-name>
		<filter-class>com.centit.security.XSSSecurityFilter</filter-class>
		<init-param>
			<param-name>securityconfig</param-name>
			<param-value>
			    /securityconfig/xss_security_config.xml
			</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>XSSFiler</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
<!--   解决xss漏洞   (新) end-->

    <!-- ec table 的导出工具  -->
    <filter>
        <filter-name>eXtremeExport</filter-name>
        <filter-class>
            org.extremecomponents.table.filter.ExportFilter
        </filter-class>
        <init-param>
            <param-name>responseHeadersSetBeforeDoFilter</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>    
    
    <filter-mapping>
        <filter-name>eXtremeExport</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>
    
  <filter>
        <filter-name>struts2-prepare</filter-name>
        <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareFilter</filter-class>
        <!--这个参数指定Struts2从什么地方查找注解，使用注解的方式是才需要配置-->
        <!-- 
        <init-param>
            <param-name>actionPackages</param-name>
            <param-value>com.centit.sys.web,com.centit.app.web</param-value>
        </init-param>
         -->
         <init-param>
            <param-name>config</param-name>     
            <param-value>struts-default.xml,struts-plugin.xml,struts-config.xml</param-value>
        </init-param>
         
    </filter>
    <filter-mapping>
        <filter-name>struts2-prepare</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>    
    <filter-mapping>
        <filter-name>struts2-prepare</filter-name>
        <url-pattern>/page/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>struts2-prepare</filter-name>
        <url-pattern>/struts/*</url-pattern>
    </filter-mapping>  
    
     <!--sitemesh需要在struts2的prepare和execute两个filter之间-->
<!-- 	<filter>
		<filter-name>sitemeshFilter</filter-name>
		<filter-class>com.opensymphony.sitemesh.webapp.SiteMeshFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>sitemeshFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping> -->
	
    <filter>
        <filter-name>struts2-execute</filter-name>
        <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsExecuteFilter</filter-class>
    </filter>

	<filter-mapping>
        <filter-name>struts2-execute</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>  
    <filter-mapping>
        <filter-name>struts2-execute</filter-name>
        <url-pattern>/page/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>struts2-execute</filter-name>
        <url-pattern>/struts/*</url-pattern>
    </filter-mapping>

 <!-- dwr config begin -->
   <servlet>
      <servlet-name>dwr-invoker</servlet-name>
      <servlet-class>org.directwebremoting.servlet.DwrServlet</servlet-class>
      <init-param>
         <param-name>debug</param-name>
         <param-value>true</param-value>
      </init-param>
      <init-param>
         <param-name>pollAndCometEnabled</param-name>
         <param-value>true</param-value>
      </init-param>
      <init-param>
         <param-name>scriptSessionTimeout</param-name>
         <param-value>2160000</param-value>
      </init-param>
      <init-param>
         <param-name>org.directwebremoting.extend.ScriptSessionManager</param-name>
         <param-value>com.centit.app.util.DwrScriptSessionManager</param-value>
      </init-param>
      <load-on-startup>1</load-on-startup>
   </servlet>
   <servlet-mapping>
      <servlet-name>dwr-invoker</servlet-name>
      <url-pattern>/dwr/*</url-pattern>
   </servlet-mapping>
   <!-- dwr config end -->
    
<!-- 配合Spring容器中XFire一起工作的Servlet- -->  
    <servlet>
    	<servlet-name>xfireServlet</servlet-name>
    	<servlet-class>org.codehaus.xfire.spring.XFireSpringServlet</servlet-class>
  	</servlet>  
  	<servlet-mapping>
    	<servlet-name>xfireServlet</servlet-name>
    	<url-pattern>/services/*</url-pattern>
  	</servlet-mapping> 
  	
  	<servlet>
		<servlet-name>DownloadServlet</servlet-name>
		<servlet-class>com.centit.webservice.web.DownloadServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>DownloadServlet</servlet-name>
		<url-pattern>/download/*</url-pattern>
	</servlet-mapping>
     <servlet>
    	<display-name>OfficeServer</display-name>
    	<servlet-name>OfficeServer</servlet-name>
    	<servlet-class>com.goldgrid.weboffice.OfficeServer</servlet-class>
    </servlet>
    <servlet-mapping>
    	<servlet-name>OfficeServer</servlet-name>
    	<url-pattern>/OfficeServer</url-pattern>
    </servlet-mapping>
    
    
       <!-- Listeners -->
     <listener>
      	<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
 	</listener>  
    <listener>
        <listener-class>
            org.springframework.web.util.Log4jConfigListener
        </listener-class>
    </listener>
    <!-- com.centit.sys.web.StartupListener EXTENDS org.springframework.web.context.ContextLoaderListener -->
    <listener>
        <listener-class>
            com.centit.core.web.StartupListener
        </listener-class>
    </listener>
    <!-- CAS统一登出监听器 -->

<!--      <listener>
         <listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>
     </listener>
     -->
    <jsp-config>
        <taglib>
            <taglib-location>/WEB-INF/coderepo.tld</taglib-location>
            <taglib-uri>http://www.centit.com/el/coderepo</taglib-uri>
        </taglib>
    </jsp-config>

    <!-- other -->
    <session-config>
        <session-timeout>120</session-timeout>
    </session-config>

    <welcome-file-list>
        <welcome-file>page/init.jsp</welcome-file>
<!--         <welcome-file>page/frame/login.jsp</welcome-file> -->
    </welcome-file-list>

</web-app>
