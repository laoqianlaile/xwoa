<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
	default-lazy-init="true">

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:system.properties</value>
		</property>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="maxWait" value="${jdbc.maxWait}" />

		<property name="defaultAutoCommit" value="${jdbc.defaultAutoCommit}" />
		<property name="removeAbandoned" value="${jdbc.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />
		<property name="validationQuery" value="${jdbc.validationQuery}" />
	</bean>

	<!-- org.hibernate.dialect.OracleDialect -->
	<!-- <bean id="sqlDataSource" class="org.apache.commons.dbcp.BasicDataSource"> 
		<property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver" 
		/> <property name="url" value="jdbc:sqlserver://192.168.1.12:1433;databaseName=cs3l" 
		/> <property name="username" value="sa" /> <property name="password" value="2centit13" 
		/> <property name="maxActive" value="100" /> <property name="maxIdle" value="30" 
		/> <property name="maxWait" value="1000" /> <property name="defaultAutoCommit" 
		value="true" /> <property name="removeAbandoned" value="true" /> <property 
		name="removeAbandonedTimeout" value="60" /> <property name="validationQuery" 
		value="select top 1 1 from syscolumns" /> </bean> -->
	<!-- org.hibernate.dialect.SQLServerDialect -->
	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"> 
		<property name="driverClassName" value="com.ibm.db2.jcc.DB2Driver" /> <property 
		name="url" value="jdbc:db2://192.168.1.14:50000/ourproj" /> <property name="username" 
		value="db2inst1" /> <property name="password" value="db2inst1" /> <property 
		name="maxActive" value="100" /> <property name="maxIdle" value="30" /> <property 
		name="maxWait" value="1000" /> <property name="defaultAutoCommit" value="true" 
		/> <property name="removeAbandoned" value="true" /> <property name="removeAbandonedTimeout" 
		value="60" /> <property name="validationQuery" value="select 1 from sysibm.sysdummy1" 
		/> </bean> -->
	<!-- org.hibernate.dialect.DB2Dialect -->
	<!--定义了Hibernate的SessionFactory -->
	<!--<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"> -->
	<!-- <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"> -->
	<bean id="sessionFactory" class="com.centit.core.dao.CentitLocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.Oracle10gDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">false</prop>
			</props>
		</property>

		<property name="mappingLocations">
			<list>
				<value>classpath*:/com/centit/**/*.hbm.xml</value>
				<!-- <value>classpath*:/com/centit/workflow/sample/po/*.hbm.xml</value> -->
			</list>
		</property>
		
		<!--排除需要扩展的PO对应的hbm.xml文件-->
        <property name="mappingLocationsExclude">
            <list>
                <value>classpath*:/com/centit/**/FUserinfo.hbm.xml</value>
            </list>
        </property>
        <!--指定新增本项目中需要覆盖的PO对应的hbm.xml文件-->
        <property name="mappingResources">
            <list>
                <value>/com/centit/sys/po/FUserinfo.hbm.xml</value>
            </list>
        </property>	
		<property name="mappingDirectoryLocations">
			<list>
				<!-- <value>classpath*:/com/centit/sys/po</value> -->
				<!-- <value>classpath:/com/centit/workflow/sample/po</value> -->
				<!-- <value>classpath:/com/centit/app/po</value>
				<value>classpath:/com/centit/stat/po</value>
				<value>classpath:/com/centit/powerruntime/po</value>
				<value>classpath:/com/centit/punish/po</value>
				<value>classpath:/com/centit/powerbase/po</value>
				<value>classpath:/com/centit/monitor/po</value>
				<value>classpath:/com/centit/complaint/po</value>
				<value>classpath:/com/centit/supervise/po</value>
				<value>classpath:/com/centit/dispatchdoc/po</value> -->
			</list>
		</property>
		<property name="lobHandler" ref="lobHandler">
		</property>
	</bean>

	<!-- Transaction manager for a single Hibernate SessionFactory (alternative 
		to JTA) -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- Transaction template for Managers -->
	<bean id="baseTransactionProxy"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
		abstract="true">
		<property name="transactionManager" ref="transactionManager" />
		<!--事务1-->
		<property name="preInterceptors">
            <list>
             	<ref bean="hibernateInterceptor"/>
            </list>
        </property>
		<property name="transactionAttributes">
			<props>
				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="set*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="renew*">PROPAGATION_REQUIRED</prop>
				<prop key="disable*">PROPAGATION_REQUIRED</prop>
				<prop key="reset*">PROPAGATION_REQUIRED</prop>
				<prop key="submit*">PROPAGATION_REQUIRED</prop>
				<prop key="stop*">PROPAGATION_REQUIRED</prop>
				<prop key="suspend*">PROPAGATION_REQUIRED</prop>
				<prop key="awake*">PROPAGATION_REQUIRED</prop>
				<prop key="create*">PROPAGATION_REQUIRED</prop>
				<prop key="submit*">PROPAGATION_REQUIRED</prop>
				<prop key="publish*">PROPAGATION_REQUIRED</prop>
				<prop key="assign*">PROPAGATION_REQUIRED</prop>
				<prop key="rollback*">PROPAGATION_REQUIRED</prop>
				<prop key="store*">PROPAGATION_REQUIRED</prop>
				<prop key="run*">PROPAGATION_REQUIRED</prop>
				<prop key="enable*">PROPAGATION_REQUIRED</prop>
				<prop key="record*">PROPAGATION_REQUIRED</prop>
				<prop key="new*">PROPAGATION_REQUIRED</prop>
				<prop key="release*">PROPAGATION_REQUIRED</prop>
				<prop key="activize*">PROPAGATION_REQUIRED</prop>
				<!--事务1-->
				<prop key="execute*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	<!--事务1-->
	<bean id="hibernateInterceptor" class="org.springframework.orm.hibernate3.HibernateInterceptor">
         <property name="sessionFactory">
           <ref bean="sessionFactory"/>
         </property>
    </bean>
	
	<!-- 给事务添加的属性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- propagation表示的是事务的传播特性，使用required时，是当检测到add开头的方法时，就看此时有没有开启的事务，如果有则将方法放进事务中去，如果没有，则新建一个事务。然后将方法放进去。 -->
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="submit*" propagation="REQUIRED" />
			<!-- 如果检测到其它的方法，则给其只读数据库的属性。即当本方法在读时，其它的方法不能再去写了。保证一个事务的完整性。 -->
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<bean id="nativeJdbcExtractor"
		class="org.springframework.jdbc.support.nativejdbc.C3P0NativeJdbcExtractor"
		lazy-init="true" />


	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.OracleLobHandler"
		lazy-init="true">
		<property name="nativeJdbcExtractor">
			<ref bean="nativeJdbcExtractor" />
		</property>

	</bean>
	<bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />

</beans>