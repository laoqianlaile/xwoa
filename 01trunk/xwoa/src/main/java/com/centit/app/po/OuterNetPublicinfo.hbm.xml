<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd"><!--Mapping 
	file autogenerated by codefan@centit.com -->
<hibernate-mapping>
	<class name="com.centit.app.po.OuterNetPublicinfo" table="P_OUTERNET_PUBLICINFO"
		>
		<id name="infocode" type="java.lang.String">
			<column name="INFOCODE" length="16" />
			<generator class="assigned" />
		</id>
		<property name="parentinfocode" type="java.lang.String">
			<column name="PARENTINFOCODE" length="16" />
		</property>
		<property name="unitcode" type="java.lang.String">
			<column name="UNITCODE" length="16" />
		</property>
		
		<many-to-one name="fileinfoFs" class="com.centit.app.po.OuterNetFileinfoFs"
			column="filecode" unique="true" cascade="all" lazy="false"></many-to-one>
		
		<property name="filename" type="java.lang.String">
			<column name="FILENAME" length="128" />
		</property>
		<property name="fileextension" type="java.lang.String">
			<column name="FILEEXTENSION" length="16" />
		</property>
		<property name="ownercode" type="java.lang.String">
			<column name="OWNERCODE" length="8" />
		</property>
		<property name="readcount" type="java.lang.Long">
			<column name="READCOUNT" precision="8" scale="0" />
		</property>
		<property name="downloadcount" type="java.lang.Long">
			<column name="DOWNLOADCOUNT" precision="8" scale="0" />
		</property>
		<property name="uploadtime" type="java.util.Date">
			<column name="UPLOADTIME" length="7" />
		</property>
		<property name="modifytime" type="java.util.Date">
			<column name="MODIFYTIME" length="7" />
		</property>
		<property name="status" type="java.lang.String">
			<column name="STATUS" length="1" />
		</property>
		<property name="foldertype" type="java.lang.String">
			<column name="FOLDERTYPE" length="1" />
		</property>
		<property name="isfolder" type="java.lang.String">
			<column name="ISFOLDER" length="1" />
		</property>
		<property name="filedescription" type="java.lang.String">
			<column name="FILEDESCRIPTION" length="512" />
		</property>
		<property name="filesize" type="java.lang.Long">
			<column name="FILESIZE" />
		</property>
		<property name="allowcomment" type="java.lang.String">
			<column name="ALLOWCOMMENT" length="1" />
		</property>
	</class>
	
	<!-- 计数有多少个对象引用FILECODE -->
	<sql-query name="OUTERNET_COUNT_FILECODE_USED">
	 <![CDATA[
	      select count(1) as num from p_outernet_publicinfo p where p.filecode = :filecode
	  ]]>
	</sql-query>
	
	<!-- 列出机构的直接父级机构 -->
	<sql-query name="OUTERNET_LIST_UNIT_DIRECT_PARENTS">
	 <![CDATA[
	      select unitcode from f_unitinfo
	      start with (unitcode = :unitcode)
	      connect by prior parentunit = unitcode
	  ]]>
	</sql-query>
	
	<!-- 用户所属机构编码 -->
	<sql-query name="OUTERNET_LIST_USER_UNITCODE">
	 <![CDATA[
	      select unitcode from f_userunit where usercode = :usercode
	  ]]>
	</sql-query>
	
	<!-- 列出文件路径 -->
	<sql-query name="OUTERNET_LIST_PATH_PARENTS">
	 <![CDATA[
	      select infocode, filename from p_outernet_publicinfo
	      start with (infocode = :infocode)
	      connect by prior parentinfocode = infocode
	  ]]>
	</sql-query>
	
	<!-- 列出指定公共文件夹首页下用户可见文件 -->
	<sql-query name="OUTERNET_LIST_ROOT_PUBLICFILES">
	 <![CDATA[
			select {p.*} from p_outernet_publicinfo p where 
			(
			    p.foldertype = '1' or p.unitcode in 
			      (
			          select unitcode from f_userunit u where u.usercode = :usercode 
			      )
			)
			and p.parentinfocode = :infocode
			order by p.isfolder desc , p.foldertype, p.uploadtime desc
	  ]]>
	</sql-query>
	
	<!-- 列出某个用户所有的文件 -->
	<sql-query name="OUTERNET_LIST_ALL_SUB_PUBLICFILES">
	 <![CDATA[
			select {p.*} from p_outernet_publicinfo p where 
			p.ownercode = :ownercode
			and p.isfolder = '0'
			start with p.parentinfocode = :parentinfocode
            connect by prior p.infocode = p.parentinfocode
			order by p.uploadtime desc
	  ]]>
	</sql-query>
	
	<!-- 查询目录下所有文件/文件夹 -->
	<sql-query name="OUTERNET_LIST_ALL_PUBLICFILES">
	 <![CDATA[
			select {p.*} from p_outernet_publicinfo p where p.parentinfocode = :infocode order by p.isfolder desc , p.foldertype, p.uploadtime desc
	  ]]>
	</sql-query>
	
	<!-- 查询目录下部门的所有文件/文件夹 -->
	<sql-query name="OUTERNET_LIST_UNIT_ALL_PUBLICFILES">
	 <![CDATA[
			select {p.*} from p_outernet_publicinfo p where p.parentinfocode = :infocode and p.unitcode = :unitcode order by p.isfolder desc , p.foldertype, p.uploadtime desc
	  ]]>
	</sql-query>
	
	<!-- 查询目录下所有文件夹 -->
	<sql-query name="OUTERNET_LIST_ALL_PUBLICFILES_FOLDER">
	 <![CDATA[
			select {p.*} from p_outernet_publicinfo p 
			where p.parentinfocode = :infocode 
			and p.isfolder = '1'
			order by p.filename
	  ]]>
	</sql-query>
	
	<!-- 查询目录下本单位所有文件夹 -->
	<sql-query name="OUTERNET_LIST_UNIT_PUBLICFILES_FOLDER">
	 <![CDATA[
			select {p.*} from p_outernet_publicinfo p 
			where p.parentinfocode = :infocode
			and p.unitcode = :unitcode
			and p.foldertype = '0' 
			and p.isfolder = '1'
			order by p.filename
	  ]]>
	</sql-query>
	
	<!-- 按名称查询查询目录下的文件夹 -->
	<sql-query name="OUTERNET_GET_FOLDER_BY_NAME">
	 <![CDATA[
			select {p.*} from p_outernet_publicinfo p 
			where p.filename = :name 
			and p.isfolder = '1' 
			and p.parentinfocode = :infocode
	  ]]>
	</sql-query>
	
	<!-- 按名称查询查询目录下的文件 -->
	<sql-query name="OUTERNET_GET_FILE_BY_NAME">
	 <![CDATA[
			select {p.*} from p_outernet_publicinfo p 
			where p.filename = :name 
			and p.fileextension = :ext 
			and p.isfolder = '0' 
			and p.parentinfocode = :infocode
	  ]]>
	</sql-query>
	
	<!-- 按名称查询查询目录下的文件 -->
	<sql-query name="OUTERNET_GET_FILE_BY_NAME_WITHOUT_EXT">
	 <![CDATA[
			select {p.*} from p_outernet_publicinfo p 
			where p.filename = :name 
			and p.fileextension is null 
			and p.isfolder = '0' 
			and p.parentinfocode = :infocode
	  ]]>
	</sql-query>
	
	<!-- 根据ID所有文件/文件夹 -->
	<sql-query name="OUTERNET_LIST_PUBLICFILES_BY_IDS">
	 <![CDATA[
			from OuterNetPublicinfo p where p.infocode in (:codes)
	  ]]>
	</sql-query>
	
	<!-- 查询机构的默认根目录 -->
	<sql-query name="OUTERNET_GET_UNIT_ROOT_DIRECTORY">
	 <![CDATA[
	 	select {p.*} from p_outernet_publicinfo p where 
	 		p.isfolder = '1'
	 		and (p.foldertype = '9' or p.foldertype = '0')			/*首页或者是自定义公共文件夹*/
	 		and (p.parentinfocode = '1' or p.parentinfocode = '0')  /*顶级或者次顶级*/  
	 		and p.unitcode = :unitcode
	  ]]>
	</sql-query>
	
	<!-- 查询公共文件夹根目录 -->
	<sql-query name="OUTERNET_GET_ROOT_DIRECTORY">
	 <![CDATA[
	 	select {p.*} from p_outernet_publicinfo p where 
	 		p.isfolder = '1'
	 		and p.foldertype = '9'
	  ]]>
	</sql-query>
	
	<!-- 查询部门文档根目录 -->
	<sql-query name="OUTERNET_GET_UNITFILE_ROOT_DIRECTORY">
	 <![CDATA[
	 	select {p.*} from p_outernet_publicinfo p where 
	 		p.isfolder = '1'
	 		and p.foldertype = '7'
	 		and p.unitcode = :unitcode
	  ]]>
	</sql-query>
	
	<!-- 查询个人文件夹根目录 -->
	<sql-query name="OUTERNET_GET_PERSONAL_ROOT_DIRECTORY">
	 <![CDATA[
	 	select {p.*} from p_outernet_publicinfo p where 
	 		p.isfolder = '1'
	 		and p.foldertype = '8'
	 		and p.ownercode = :usercode
	  ]]>
	</sql-query>
	
</hibernate-mapping>